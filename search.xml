<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面试准备大总结</title>
      <link href="/2025/06/30/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E5%A4%A7%E6%80%BB%E7%BB%93/"/>
      <url>/2025/06/30/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E5%A4%A7%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="面试突击（面经）"><a href="#面试突击（面经）" class="headerlink" title="面试突击（面经）"></a>面试突击（面经）</h2><blockquote><p><strong>每天2小时，尽量是一种类型的连续性完成熟悉</strong></p></blockquote><h3 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h3><ol><li><strong>进程和线程有什么区别？</strong></li></ol><p><strong>进程</strong>：资源分配的基本单位。至少包含一个线程。有共享资源堆和方法区。进程之前通信复杂。</p><p>​每个进程都拥有的资源：堆、栈、虚存空间（页表）、文件描述符等信息。</p><p>​在 Java 中，每个进程都由一个主线程（main thread）启动。当进程运行时，操作系统会为其分配一个进程号，并将其作为一个独立的实体来进行管理。</p><p><strong>线程</strong>：cpu任务执行调度的基本单位。有栈和程序计数器，是每个线程私有的。共享堆内存</p><p><strong>图</strong>：进程包含线程图。</p><p>代码实现</p><p>​进程：new builderProcess(nod.exe) 打开记事本</p><p>​线程：new Thread ((Parame)-&gt; { 重写Run方法}).start</p><blockquote><p>使用匿名内部类实现Runnable接口函数式接口（接口有@FunctionalInterface标注，只有一个抽象方法），这个相当于实现函数式接口Runnable，重写Run抽象方法，最后执行（执行的具体还得研究一下）</p></blockquote><ol start="2"><li><p><strong>虚拟线程</strong></p><p>虚拟线程是更轻量级的线程，普通线程和操作系统一一对应的，而虚拟线程是jvm层面实现出的逻辑线程，他可以减少线程上下文切换带来的性能开销。它和普通线程的线程类型也不同，普通线程是默认是用户线程类型，而虚拟线程则是守护线程（而且不能被修改）。</p></li><li><p><strong>线程等待和唤醒的几种实现</strong> </p><ol><li>Object类下的wait(), notify(), notifyAll()</li><li>Condition类下的await(), signal(), signalAll()</li><li>LockSupport类下的park(), unpark()</li></ol></li></ol><h2 id="项目（项目问题解决思路）"><a href="#项目（项目问题解决思路）" class="headerlink" title="项目（项目问题解决思路）"></a>项目（项目问题解决思路）</h2><blockquote><p><strong>每天2小时</strong></p></blockquote><h2 id="框架的底层原理（对框架、设计模式的熟悉）"><a href="#框架的底层原理（对框架、设计模式的熟悉）" class="headerlink" title="框架的底层原理（对框架、设计模式的熟悉）"></a>框架的底层原理（对框架、设计模式的熟悉）</h2><blockquote><p><strong>每天2小时，尽量是一种类型的连续性完成熟悉</strong></p></blockquote><ol><li>手撸spring github链接</li></ol><h2 id="数据结构算法"><a href="#数据结构算法" class="headerlink" title="数据结构算法"></a>数据结构算法</h2><p><strong>每天2小时，尽量是一种类型的连续性完成熟悉</strong></p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql学习总结</title>
      <link href="/2025/06/27/mysql%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2025/06/27/mysql%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="Mysql查询索引失效的15种情况"><a href="#Mysql查询索引失效的15种情况" class="headerlink" title="Mysql查询索引失效的15种情况"></a>Mysql查询索引失效的15种情况</h2><ol><li><p>select * 由于是全表扫描，不会走索引，建议写清楚那些字段，可能走覆盖索引（同联合索引）</p></li><li><p>联合索引最左匹配，联合索引的顺序和where中条件的顺序满足最左匹配，才会走索引</p></li><li><p>索引列参与了计算，索引会失效</p></li><li><p>索引列进行了函数操作</p></li><li><p>or会导致索引失效</p></li><li><p>in，not in等如果不是主键，都会失效</p></li><li><p>like，前导符是%会失效</p></li><li><p>is not null 索引失效，is null会正常走索引</p></li><li><p>索引列类型的隐式转换会失效</p></li><li><p>两列作比较会失效</p></li><li><p>不等于会失效</p></li><li><p><strong>普通索引会查询结果集占比较大时索引会失效</strong></p></li><li><p>orderBy会导致索引失效，有的版本不失效</p></li><li><p>参数不同导致索引失效</p><p><strong>上述索引失效是因为DBMS发现全表扫描比走索引效率更高，因此就放弃了走索引</strong>。</p><p>也就是说，当Mysql发现通过索引扫描的行记录数超过全表的10%-30%时，优化器可能会放弃走索引，自动变成全表扫描。某些场景下即便强制SQL语句走索引，也同样会失效。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> java开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud微服务学习</title>
      <link href="/2025/06/26/SpringCloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AD%A6%E4%B9%A0/"/>
      <url>/2025/06/26/SpringCloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="消息中间件"><a href="#消息中间件" class="headerlink" title="消息中间件"></a>消息中间件</h2><h3 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h3><p>消息队列实现</p><ul><li><strong>流量削峰</strong>：如果数据库或者系统只能10000的qps，但是每秒来了4w的qps，这时候就可以用消息队列来存放数据，并且控制每秒不超过1wqps给数据库发送。</li><li><strong>应用解耦</strong>：支付服务，库存服务，不会应为一个服务出异常，而整个流程不能继续，其它的服务都会正常进行，而且消息队列还支持失败重试等，保证消费消息，数据不会丢失。</li><li><strong>异步处理</strong>：不会阻塞等待商品存入数据库，而是先完成下单支付功能，之后返会订单结果</li><li><strong>数据分发</strong>：不仅可以1对1传输数据，还可以使用主题分发下放数据，下游服务可以订阅消费数据。</li></ul><h2 id="RPC服务框架"><a href="#RPC服务框架" class="headerlink" title="RPC服务框架"></a>RPC服务框架</h2><p>Dubbo</p>]]></content>
      
      
      <categories>
          
          <category> java开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 中间件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis学习笔记</title>
      <link href="/2025/06/26/mybatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/06/26/mybatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>dao层相当于mapper层，mybatis通过JDK动态代理实现mapper接口，然后拦截对应的方法，转而去执行mapperStatement中对应的sql，然后返回执行结果。</p><p>${}：properties</p><p>#{}：mapper接口方法中传参，按需对应放入sql中的#{}中。</p><p>mybatis分页查询：Limit ？ ？ ，传参分页</p><p>动态sql，mapper中可以重载</p><h2 id="mybatis如何防止sql注入"><a href="#mybatis如何防止sql注入" class="headerlink" title="mybatis如何防止sql注入"></a>mybatis如何防止sql注入</h2><p>#{} 可以防止，name &#x3D; 111，会name &#x3D; “111” 自动加一对引号</p><p>原理是使用预编译占位符替代变量，然后直接把变量拿来用就行，而sql注入的只会在编译阶段起作用</p><h2 id="mybatis缓存"><a href="#mybatis缓存" class="headerlink" title="mybatis缓存"></a>mybatis缓存</h2><p><strong>一级缓存</strong>：sqlsession层面，sqlsession销毁就会消失</p><p><strong>二级缓存</strong>：mapper层面，sqlsession销毁会放入二级缓存，如果开启二级缓存</p>]]></content>
      
      
      <categories>
          
          <category> java开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring学习笔记</title>
      <link href="/2025/06/25/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/06/25/spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="spring最核心的两个功能是IOC（Inversion-of-control）容器和Spring-AOP（面向切面编程）"><a href="#spring最核心的两个功能是IOC（Inversion-of-control）容器和Spring-AOP（面向切面编程）" class="headerlink" title="spring最核心的两个功能是IOC（Inversion of control）容器和Spring AOP（面向切面编程）"></a>spring最核心的两个功能是IOC（Inversion of control）容器和Spring AOP（面向切面编程）</h3><p><strong>IOC容器</strong>：控制反转，把对象创建交给Spring框架来做，这些对象就叫做bean对象，可以使用Autowired（按类型、按名称）（可以写qulifiy指定名称）和resource（可以写value属性）注入使用。也可以理解为交给Spring框架来管理这些对象。</p><ul><li>bean对象的生命周期是：创建bean对象、初始化、使用bean对象、销毁bean对象</li><li>工厂设计模式实现的。可以看源码理解具体怎么实现的。</li></ul><p><strong>Spring AOP</strong>：面向切面编程，Spring中许多事务管理、全局异常处理等都是AOP 实现的，减少代码的冗余。</p><ul><li>通知（advice）<ul><li>方法前置 before</li><li>方法后置 after</li><li>返回前后beforeReturning、afterReturning</li><li>环绕通知 around</li></ul></li><li>切入点（point）</li><li>切面（aspect）</li></ul><blockquote><p>通过JDK动态代理和Cglib代理实现</p><blockquote><p>jdk动态代理，代理类实现接口来代理</p><p>Cglib通过继承变成子类来代理</p></blockquote></blockquote><h3 id="Spring-Data-JPA"><a href="#Spring-Data-JPA" class="headerlink" title="Spring Data JPA"></a>Spring Data JPA</h3><p>实体类和数据库的映射</p><p>有很多注解</p><p>@Entity，@Data，数据表的映射，@trisent注解数据表无</p><h3 id="Spring-Security"><a href="#Spring-Security" class="headerlink" title="Spring Security"></a>Spring Security</h3><p>Spring的访问权限管理</p><h3 id="Spring多级缓存"><a href="#Spring多级缓存" class="headerlink" title="Spring多级缓存"></a>Spring多级缓存</h3><p>三级缓存解决循环依赖问题</p><h3 id="Spring事务"><a href="#Spring事务" class="headerlink" title="Spring事务"></a>Spring事务</h3><p><strong>事务传播类型</strong></p><ul><li>当前事务，新建事务，嵌套事务</li></ul><p><strong>事务的隔离级别</strong></p><ul><li><p>未提交可读 （脏读、不可重复读、幻读）</p></li><li><p>已提交可读（不可重复读、幻读）</p></li><li><p>（幻读）</p></li><li><p>最高隔离级别（事务之间独立）</p></li></ul><blockquote><p>都有枚举类列举类型</p></blockquote><h3 id="Spring中用到了哪些设计模式"><a href="#Spring中用到了哪些设计模式" class="headerlink" title="Spring中用到了哪些设计模式"></a>Spring中用到了哪些设计模式</h3><ul><li>工厂模式</li><li>适配器模式：jdk动态代理，Cglib代理</li><li>观察者模式</li><li>单例</li><li>包装器</li><li>模版</li><li>代理模式</li><li>……</li></ul><h3 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h3><p>浏览器请求、dispatcher拦截、hanlermapping匹配handler（相当于controller）、包装返回dispatcher、handlerAdapter执行handler、返回数据（SpringMVC前后端分离直接返回json数据即可，不是传统的jsp和Thyme页面，不需要后端渲染页面，而是通过vue或者react渲染）</p><p><strong>统一异常处理的实现</strong></p>]]></content>
      
      
      <categories>
          
          <category> java开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试面经</title>
      <link href="/2025/06/24/%E9%9D%A2%E8%AF%95%E9%9D%A2%E7%BB%8F/"/>
      <url>/2025/06/24/%E9%9D%A2%E8%AF%95%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="一、世纪鲲鹏-全栈开发"><a href="#一、世纪鲲鹏-全栈开发" class="headerlink" title="一、世纪鲲鹏 全栈开发"></a>一、世纪鲲鹏 全栈开发</h2><ul><li>自我介绍</li><li>实习经历学到了什么，最大的收获的公司<ul><li>项目中用到什么技术栈</li><li>我提了AOP，然后问了AOP是什么</li><li>怎么编写一个注解</li><li>我提了bean，问我什么是IOC</li><li>bean的生命周期</li><li>maven的生命周期</li></ul></li></ul><blockquote><p>感觉失败了，真的很想去这家，但可能还是没准备好，实力不够吧。以后就是把实习经历的内容丰富一下，然后继续多投简历多面试，把javaguide的所有知识学习一下。又一次没把握住机会，哭哭。虽然我只是个应届生。</p></blockquote><h2 id="二、九州通物流-软开"><a href="#二、九州通物流-软开" class="headerlink" title="二、九州通物流 软开"></a>二、九州通物流 软开</h2><h3 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h3><ul><li>实习没啥问的，需要合作分工项目啥的</li><li>数据库索引命中 not in, like</li><li>mybatis # 和 $ 的区别，那个可以避免sql注入</li><li>Redis的穿透、雪崩、击穿</li><li>nacos服务注册可以热部署吗</li><li>kafka实现原理，怎么使用kafka</li></ul><blockquote><p>把一面不会的问题解决了，二面比较好过，现在急需要这样的开发岗，不管工资如何，学到技术是最好的。</p></blockquote><h2 id="三、中电信数智-java开发"><a href="#三、中电信数智-java开发" class="headerlink" title="三、中电信数智 java开发"></a>三、中电信数智 java开发</h2><h3 id="一面-1"><a href="#一面-1" class="headerlink" title="一面"></a>一面</h3><ul><li>实习</li><li>数据库表设计，会议室啥的</li><li>string stringbuffer stringbuilder的区别</li><li>sql索引失效场景</li><li>mybatis怎么防止sql注入</li><li>SpringIOC和AOP</li><li>bean的生命周期</li><li>mybatis的一级缓存</li><li>git发生冲突的时候怎么处理的</li></ul><blockquote><p>把数据库啥的再熟悉一下，记得把Redis和面试官说一下，因为自己比较熟悉，暗示面试官可以问，加分。面试官说我声音太小，以后把声音提高。</p></blockquote><h2 id="四、国子软件-全栈工程师"><a href="#四、国子软件-全栈工程师" class="headerlink" title="四、国子软件 全栈工程师"></a>四、国子软件 全栈工程师</h2><h3 id="一面-2"><a href="#一面-2" class="headerlink" title="一面"></a>一面</h3><blockquote><p>惨了，直接被面试官鸽了，hr也不回我话。然后我去网上搜国子软件，发现他们公司风评不好，加班严重，听说元老级别的人物才2年。继续慢慢找吧，做做项目啥的，改改简历。</p></blockquote><ol><li>一堆基础技术，还会有二面技术。</li><li>vue前端有问题。</li><li>并发多线程有问题。</li></ol><h2 id="五、中科软-java开发"><a href="#五、中科软-java开发" class="headerlink" title="五、中科软 java开发"></a>五、中科软 java开发</h2><h2 id="一面-3"><a href="#一面-3" class="headerlink" title="一面"></a>一面</h2><ol><li><p>sql的优化</p></li><li><p>数据库函数的使用</p></li><li><p>group by 和 having的使用</p></li><li><p>项目的数据结构怎么，好像就是数据库的表</p></li><li><p>多线程有没有实际运用过</p></li><li><p>遍历集合的几种方法，有什么区别</p></li><li><p>给你一个项目，你如何去学习和了解</p></li><li><p>了解那些linux命令</p></li></ol><h3 id="终面"><a href="#终面" class="headerlink" title="终面"></a>终面</h3><p>1.家庭情况，薪资和地点。</p><h2 id="六、数启建星科技-java开发"><a href="#六、数启建星科技-java开发" class="headerlink" title="六、数启建星科技 java开发"></a>六、数启建星科技 java开发</h2><h3 id="一面-4"><a href="#一面-4" class="headerlink" title="一面"></a>一面</h3><ol><li>微服务集群了解哪些</li><li>设计一个高并发微服务场景需要注意哪些问题</li><li>RabbitMQ限流的算法有哪些</li><li>sql的优化</li><li>IOC和DI</li><li>ArrayList和LinkedList 的区别</li><li>RabbitMQ怎么保证数据不丢失</li><li>nginx除了放一些静态资源还可以做什么</li><li>CICDdocker相关的知识有了解过吗</li><li>用redis实现分布式锁</li></ol><h2 id="七、国沄科技-java开发"><a href="#七、国沄科技-java开发" class="headerlink" title="七、国沄科技 java开发"></a>七、国沄科技 java开发</h2><h3 id="一面-5"><a href="#一面-5" class="headerlink" title="一面"></a>一面</h3><p>感觉主动找的都有点问题</p><p>问了一些基础问题</p><ol><li>spring MVC处理流程</li><li>项目哪里用到了aop</li><li>spring事务失效场景</li><li>事务的隔离级别</li><li>事务的4个特性</li></ol><h2 id="八、海颐软件"><a href="#八、海颐软件" class="headerlink" title="八、海颐软件"></a>八、海颐软件</h2><h3 id="一面-6"><a href="#一面-6" class="headerlink" title="一面"></a>一面</h3><ol><li><p>java的异常类型</p></li><li><p>docker和linux</p></li><li><p>时序数据库flux</p></li><li><p>k8s有了解吗</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法-贪心算法学习笔记</title>
      <link href="/2025/06/23/%E7%AE%97%E6%B3%95-%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2025/06/23/%E7%AE%97%E6%B3%95-%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是贪心"><a href="#什么是贪心" class="headerlink" title="什么是贪心"></a>什么是贪心</h2><p><strong>贪心的本质是选择每一阶段的局部最优，从而达到全局最优</strong></p><p>要清楚局部最优是什么，然后推导出全局最优。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 贪心算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>健身-理论和起步计划</title>
      <link href="/2025/06/19/%E5%81%A5%E8%BA%AB-%E7%90%86%E8%AE%BA%E5%92%8C%E8%B5%B7%E6%AD%A5%E8%AE%A1%E5%88%92/"/>
      <url>/2025/06/19/%E5%81%A5%E8%BA%AB-%E7%90%86%E8%AE%BA%E5%92%8C%E8%B5%B7%E6%AD%A5%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="一-健身理论知识"><a href="#一-健身理论知识" class="headerlink" title="一. 健身理论知识"></a>一. 健身理论知识</h1><blockquote><p>抖音：大海运动表现，他的视频可以帮助我们提升运动表现能力</p></blockquote><h2 id="1-全方位提升运动表现能力需要考虑一下方面"><a href="#1-全方位提升运动表现能力需要考虑一下方面" class="headerlink" title="1. 全方位提升运动表现能力需要考虑一下方面"></a>1. 全方位提升运动表现能力需要考虑一下方面</h2><ul><li>灵活性</li><li>速度（爆发力）</li><li>力量</li><li>稳定性</li></ul><blockquote><p>抖音：枭马葛，他的视频帮助我们更好的提升力量</p></blockquote><h3 id="针对力量训练"><a href="#针对力量训练" class="headerlink" title="针对力量训练"></a>针对力量训练</h3><ul><li>负重有 组数x次数 递增提升</li><li>动作的受益</li><li>疲劳恢复期的长度</li></ul><h2 id="2-起步健身计划"><a href="#2-起步健身计划" class="headerlink" title="2. 起步健身计划"></a>2. 起步健身计划</h2><h3 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h3><table><thead><tr><th></th><th>周一</th><th>周二</th><th>周三</th><th>周四</th><th>周五</th><th>周六</th><th>周日</th></tr></thead><tbody><tr><td>灵活</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h3><table><thead><tr><th></th><th>周一</th><th>周二</th><th>周三</th><th>周四</th><th>周五</th><th>周六</th><th>周日</th></tr></thead><tbody><tr><td>灵活</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 运动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运动 </tag>
            
            <tag> 健身 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/06/11/hello-world/"/>
      <url>/2025/06/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/08/25/first-artice/"/>
      <url>/2023/08/25/first-artice/</url>
      
        <content type="html"><![CDATA[<blockquote><p>你好</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> math </category>
          
          <category> chinese </category>
          
      </categories>
      
      
        <tags>
            
            <tag> first </tag>
            
            <tag> second </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
